/*******************************************************************************
 * Copyright 2019
 * Ubiquitous Knowledge Processing (UKP) Lab
 * Technische Universit√§t Darmstadt
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package org.dkpro.tc.api.features;

import java.util.Set;

import org.apache.uima.jcas.JCas;

import org.dkpro.tc.api.exception.TextClassificationException;
import org.dkpro.tc.api.type.TextClassificationTarget;

/**
 * Common signature for feature extractors which extract their features from the entire document or
 * from a given classification unit.
 * 
 */
public interface FeatureExtractor
{
    /**
     * Extract features from the classification target within the given view.
     * 
     * @param aJCas
     *            the current view of the document.
     * @param aTarget
     *            the annotation for which to collect features (iff null, the features will be
     *            extracted from the document text)
     * @return a set of features generated by the extractor for the target annotation.
     * @throws TextClassificationException
     *             if feature extraction failed
     */
    Set<Feature> extract(JCas aJCas, TextClassificationTarget aTarget)
        throws TextClassificationException;
}
